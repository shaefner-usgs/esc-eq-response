@use 'sass:color';

@use '../variables' as *;

/* Buttons
--------------------------------------------- */

a.button {
  border: 1px solid transparent;
  border-radius: $button-border-radius;
  font: bold .8125rem $font-family-headers;
  padding: .125rem .375rem;
  text-decoration: none;
  text-transform: uppercase;
  transition: all $effect-off-duration-shorter ease-in;

  &:hover {
    background: $accent-color-lightest;
    border-color: $accent-color;
    cursor: pointer;
    transition: all $effect-on-duration ease-out;
  }

  &.selected {
    background: $accent-color;
    color: $bg-color;
    transition: all $effect-on-duration ease-out;
  }
}

button {
  appearance: none;
  background: $bg-color;
  border: 1px solid $accent-color;
  border-radius: $button-border-radius;
  color: $accent-color;
  cursor: pointer;
  font: 700 1.125rem $font-family-headers;
  margin: 1rem 0 0;
  padding: .3125rem .75rem;
  text-align: center;
  text-transform: uppercase;
  transition: all $effect-off-duration-shorter ease-in;
  user-select: none;
  white-space: nowrap;

  &:active,
  &:focus,
  &:hover {
    background: $accent-color-lightest;
    transition: all $effect-on-duration ease-out;
  }
  &:active {
    background: $accent-color;
    box-shadow: inset 0 3px 8px rgba(0, 0, 0, .35);
    color: #fff;
    outline: 0;
    text-shadow: $button-text-shadow;
  }
  &:focus {
    outline: 0;
  }

  &:after {
    display: block;
    font-size: .75rem;
    font-weight: 400;
    margin-top: -.125rem;
  }

  &[disabled] {
    background: $bg-color;
    box-shadow: none;
    color: $accent-color;
    cursor: not-allowed;
    opacity: .3;
    text-shadow: none;
  }

  &#reset {
    background: $reset-button-color;
    border-color: color.scale($reset-button-color, $blackness: 15%);
    color: $text-color-lighter;

    &:active,
    &:focus,
    &:hover {
      background: color.scale($reset-button-color, $lightness: 40%);
      border-color: color.scale($reset-button-color, $blackness: 25%);
      color: $text-color;
      text-shadow: none;
    }
    &:active {
      box-shadow: inset 0 1px 5px rgba(0, 0, 0, .1);
    }
  }

  &.dim {
    opacity: .5;
  }
}

/* Check boxes, radio inputs
   (customized to Leaflet's html rendering)
--------------------------------------------- */

input[type="checkbox"],
input[type="radio"] {
  display: none;

  + span:before {
    align-items: center;
    background: $bg-color;
    border: 1px solid #888;
    content: '\00a0';
    display: flex;
    font: 1rem/1 'Arial Unicode MS';
    height: 1rem;
    justify-content: center;
    margin-right: .5rem;
    position: relative;
    text-shadow: $button-text-shadow;
    top: 0px;
    width: 1rem;
  }
}
input[type="checkbox"] + span:before {
  border-radius: 3px;
}
input[type="radio"] + span:before {
  border-radius: 50%;
  font-size: 10px;
}

input[type="checkbox"]:checked + span:before,
input[type="radio"]:checked + span:before {
  background: $accent-color;
  border-color: $accent-color;
  color: #fff;
}
input[type="checkbox"]:checked + span:before {
  content: '\2713';
}
input[type="radio"]:checked + span:before {
  content: '\25CF';
}

/* Text / number inputs
--------------------------------------------- */

input[type="text"],
input[type="number"] {
  border: 1px solid $border-color-lighter;
  border-radius: $button-border-radius;
  box-shadow: inset 0 1px 4px 0 hsla(0, 0%, 0%, .08);
  font-size: .9rem;
  margin: 0 1px 3px 0;
  outline: none;
  padding: 6px 0 6px 6px;
  transition: all .25s ease-in-out;
  width: 100%;

  &:autofill {
    background: none !important;
  }

  &:focus,
  &.active { // for Flatpickr inputs
    border: 1px solid $accent-color;
    box-shadow: 0 0 3px $accent-color;
  }
}

// Invalid Flatpickr inputs
.invalid > input[type="text"] {
  border: 1px solid $invalid-color;
  box-shadow: 0 0 3px $invalid-color;
}

// Only flag invalid fields when a Mainshock is selected
.mainshock {
  input[type="text"]:invalid,
  input[type="number"]:invalid {
    border: 1px solid $invalid-color;
    box-shadow: 0 0 3px $invalid-color;
  }
}
