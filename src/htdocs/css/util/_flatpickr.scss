@use 'sass:color';

@use 'mixins' as *;
@use 'variables' as *;

/* Flatpickr overrides and 'Now' button additions */

.flatpickr-wrapper {
  &.invalid {
    .flatpickr-calendar {
      border-color: $invalid-color;
      box-shadow: 0 0 3px $invalid-color;

      &.arrowBottom:before {
        border-top-color: $invalid-color;
      }
      &.arrowTop:before {
        border-bottom-color: $invalid-color;
      }
    }
  }

  .dayContainer {
    padding-right: 2px;
  }

  // Use the same border styles as form controls
  .flatpickr-calendar {
    border: 1px solid $accent-color;
    border-radius: $button-border-radius;
    box-shadow: 0 0 3px $accent-color;
    transition: all $effect-duration ease-in-out;
    z-index: 1001 !important; // stack above map

    &.arrowBottom:before {
      border-top-color: $accent-color;
    }
    &.arrowTop:before {
      border-bottom-color: $accent-color;
    }
  }

  .flatpickr-current-month {
    margin-left: .5rem;

    input.cur-year {
      font-weight: 300;
    }

    span.cur-month {
      font-weight: 500;

      &:hover {
        background: $bg-color;
      }
    }
  }

  .flatpickr-day {
    align-items: center;
    color: $text-color;
    display: flex;
    justify-content: center;
    transition: all $effect-off-duration ease-in;

    &:hover,
    &.nextMonthDay:not(.flatpickr-disabled):hover,
    &.prevMonthDay:not(.flatpickr-disabled):hover {
      background: $accent-color-lightest;
      border-color: $accent-color-lighter;
      color: color.adjust($text-color, $alpha: 0); // alpha: 0 overrides level set below
      transition: all $effect-on-duration ease-out;
    }
    &.nextMonthDay,
    &.prevMonthDay {
      color: color.adjust($text-color-lightest, $alpha: -0.3);
    }

    &.flatpickr-disabled,
    &.flatpickr-disabled:hover {
      background: $bg-color;
      border-color: $bg-color;
      color: color.adjust($text-color-lightest, $alpha: -0.75);
    }

    &.selected,
    &.selected:hover {
      animation: opacify $effect-on-duration ease-out;
      background: $accent-color !important;
      border-color: $accent-color !important;
      color: $bg-color !important;
      cursor: auto;
    }

    &.today {
      border-color: $accent-color;
      transition-property: background, color;

      &:hover {
        border-color: $accent-color !important;

        &:not(.flatpickr-disabled) {
          background: $accent-color-lightest;
          color: $text-color;
        }
      }
    }
  }

  .flatpickr-months {
    margin-bottom: .5rem;

    .flatpickr-month {
      color: $text-color;
    }

    .flatpickr-prev-month,
    .flatpickr-next-month {
      color: $accent-color;
      line-height: 1;
      top: 0;

      i {
        font-size: 1rem;
      }
    }
    .flatpickr-prev-month {
      left: 2px;
    }
    .flatpickr-next-month {
      right: 2px;
    }
  }

  .flatpickr-next-month.flatpickr-disabled + .flatpickr-now {
    display: inline; // show 'Now' button
  }

  .flatpickr-now {
    display: none;
    position: absolute;
    right: 5px;
    top: 6px;

    &.selected:hover {
      cursor: auto;
    }
  }

  .flatpickr-time {
    border-color: $accent-color-lighter !important;

    &:last-child {
      border-radius: 0 0 $button-border-radius 0;

      .arrowUp,
      .arrowDown {
        border-right: 0;
      }
    }

    .flatpickr-am-pm {
      color: $text-color;

      &:focus {
        background: $bg-color;
      }
      &:hover {
        background: $accent-color-lightest;
      }
      &:active {
        background: $accent-color;
        border-radius: 0;
        color: $bg-color;
      }
    }

    .flatpickr-hour {
      border-radius: 0 0 0 $button-border-radius + 2px;
      font-weight: normal;
    }

    .flatpickr-minute {
      border-radius: 0;

      &:invalid {
        border: none;
        box-shadow: none;
      }
    }
  }

  .flatpickr-weekday {
    color: $text-color-lighter;
  }

  .numInputWrapper {
    &:first-child {
      border-radius: 0 0 0 $button-border-radius + 2px;
    }

    &:hover {
      background: $accent-color-lightest;
    }

    input {
      border: none;
      box-shadow: none;
      color: $text-color;

      &:focus,
      &:hover {
        background: $accent-color-lightest;
        border: none;
        box-shadow: none;
      }
    }

    span { // up, down arrows
      border-color: $accent-color-lighter;
      transition: all $effect-off-duration ease-in;

      &.arrowDown:after,
      &.arrowUp:after {
        transition: all $effect-off-duration ease-in;
      }
      &.arrowDown:after {
          border-top-color: $accent-color;
      }
      &.arrowUp:after {
          border-bottom-color: $accent-color;
      }

      &:hover {
        background: $accent-color-lighter;
      }
      &:active {
        background: $accent-color;
        transition: all $effect-on-duration ease-out;

        &.arrowDown:after,
        &.arrowUp:after {
          transition: all $effect-on-duration ease-out;
        }
        &.arrowDown:after {
          border-top-color: $bg-color;
        }
        &.arrowUp:after {
          border-bottom-color: $bg-color;
        }
      }

      &.arrowUp {
        border-top: none;

        &:after {
          top: 35%;
        }
      }
    }
  }
}

@include opacify;
